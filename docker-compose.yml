version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: foodstack_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/database
      dockerfile: Dockerfile
    container_name: graphql_backend
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/foodstack_db
    volumes:
      - ./backend/database:/app
      - /app/node_modules

  ml_pipeline:
    build:
      context: ./backend/prediction_backend
      dockerfile: Dockerfile
    container_name: ml_pipeline
    depends_on:
      postgres:
        condition: service_healthy
    command: python prediction_backend/main.py
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/foodstack_db

volumes:
  postgres_data:
